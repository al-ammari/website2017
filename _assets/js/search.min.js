var ajaxObj;const constraints=[{name:"boolean",options:[{value:"does",display:"Does"},{value:"doesNot",display:"Does not"}]},{name:"position",options:[{value:"originate",display:"Originate"},{value:"terminate",display:"Terminate"},{value:"goVia",display:"Goes via"},{value:"contain",display:"Contain"}]},{name:"kind",options:[{value:"submitter",display:"Submitter name"},{value:"zipCodeSubmitter",display:"Submitter postcode"},{value:"ISP",display:"ISP/Carrier"},{value:"city",display:"City"},{value:"region",display:"Province/State"},{value:"country",display:"Country"},{value:"zipCode",display:"Postcode"},{value:"hostName",display:"Hostname"},{value:"destHostName",display:"Destination hostname"},{value:"ipAddr",display:"IP address"},{value:"asnum",display:"AS number"},{value:"trId",display:"Traceroute id"}]},{name:"input",options:[]},{name:"join",options:[{value:"and",display:"AND"},{value:"or",display:"OR"}]}];var constructLastContributed=function(){var a={"filter-constraint-1":{constraint1:"quickLink",constraint2:"lastSubmission"}};submitQuery(a),jQuery("#qs-search-parameters-container").text("Last contributed traceroute")},constructViaNSA=function(){var a=["San Francisco","Los Angeles","New York","Dallas","Washington","Ashburn","Seattle","San Jose","San Diego","Miami","Boston","Phoenix","Salt Lake City","Nashville","Denver","Saint Louis","Bridgeton","Bluffdale","Houston","Chicago","Atlanta","Portland"],b={},c=1;_.each(a,function(a){var d={constraint1:"does",constraint2:"contain",constraint3:"city",constraint4:a,constraint5:"OR"};b["filter-constraint-"+c]=d,c++}),submitQuery(b),jQuery("#qs-search-parameters-container").text("Does Contain City San Francisco AND Does Contain City Los Angeles AND...")},constructBoomerangs=function(){var a={"filter-constraint-1":{constraint1:"does",constraint2:"originate",constraint3:"country",constraint4:"CA",constraint5:"AND"},"filter-constraint-2":{constraint1:"does",constraint2:"goVia",constraint3:"country",constraint4:"US",constraint5:"AND"},"filter-constraint-3":{constraint1:"does",constraint2:"terminate",constraint3:"country",constraint4:"CA",constraint5:"AND"}};submitQuery(a),jQuery("#qs-search-parameters-container").text("Does Originate in Country CA AND Does Go via Country US AND Does Terminate in Country CA")},constructFromMyISP=function(){if(myASN){var a={"filter-constraint-1":{constraint1:"does",constraint2:"originate",constraint3:"asnum",constraint4:myASN,constraint5:"AND"}};submitQuery(a),jQuery("#qs-search-parameters-container").text("Does Originate in AS number "+myASN)}else jQuery().toastmessage("showErrorToast","We were unable to determine your ISP - please try a different query")},constructFromMyCity=function(){if(myCity){var a={"filter-constraint-1":{constraint1:"does",constraint2:"originate",constraint3:"city",constraint4:myCity,constraint5:"AND"}};submitQuery(a),jQuery("#qs-search-parameters-container").text("Does Originate in City "+myCity)}else jQuery().toastmessage("showErrorToast","We were unable to determine your city - please try a different query")},constructFromMyCountry=function(){if(myCountry){var a={"filter-constraint-1":{constraint1:"does",constraint2:"originate",constraint3:"country",constraint4:myCountry,constraint5:"AND"}};submitQuery(a),jQuery("#qs-search-parameters-container").text("Does Originate in Country "+myCountry)}else jQuery().toastmessage("showErrorToast","We were unable to determine your country - please try a different query")},constructBS=function(){var a={},b=1;jQuery("#bs-originate-popup .bs-input").each(function(c,d){if(""!=jQuery(d).val()){var e={constraint1:"does",constraint2:"originate",constraint3:jQuery(d).data("constraint"),constraint4:jQuery(d).val(),constraint5:"AND"};a["filter-constraint-"+b]=e,b++}}),jQuery("#bs-via-popup .bs-input").each(function(c,d){if(""!=jQuery(d).val()){var e={constraint1:"does",constraint2:"goVia",constraint3:jQuery(d).data("constraint"),constraint4:jQuery(d).val(),constraint5:"AND"};a["filter-constraint-"+b]=e,b++}}),jQuery("#bs-terminate-popup .bs-input").each(function(c,d){if(""!=jQuery(d).val()){var e={constraint1:"does",constraint2:"terminate",constraint3:jQuery(d).data("constraint"),constraint4:jQuery(d).val(),constraint5:"AND"};a["filter-constraint-"+b]=e,b++}}),_.isEmpty(a)?jQuery().toastmessage("showErrorToast","Please fill in at least one search term field to query the database."):submitQuery(a)},constructAS=function(){var a={},b=0,c=0;jQuery(".constraint").removeClass("blank-field-error"),jQuery("#as-search-container .input-holder").each(function(d,e){b++;var f=0;console.log(d,jQuery(e));var g={};_.each(jQuery(e).children(".constraint-container"),function(a){f++;var b=jQuery(a).find(".constraint-value");jQuery(b).val()?g["constraint"+f]=b.val():(c++,jQuery(a).children().addClass("blank-field-error"))}),a["filter-constraint"+b]=g}),0===c?submitQuery(a):jQuery().toastmessage("showErrorToast","One or more fields were not filled. Submission canceled.")},createASRow=function(a){var b=jQuery("<div/>");b.addClass("advanced input-holder"),_.each(constraints,function(a){var c=jQuery("<div/>");if(c.addClass("advanced-input constraint-container constraint-"+a.name),jQuery(c).data("constraint",a.name),jQuery(b).append(c),"input"===a.name){var d='<div class="ui fluid input"><input class="constraint-value" type="text" placeholder="Hostname"></div>';jQuery(c).append(d)}else{var e=jQuery("<select/>");e.addClass("constraint-value ui fluid dropdown"),_.each(a.options,function(a){e.append(new Option(a.display,a.value,!0,!0))}),jQuery(c).append(e)}});var c=jQuery("<div/>");c.addClass("advanced-input constraint-buttons");var d=jQuery("<button/>");d.addClass("circular ui icon button"),"first"===a?(jQuery(d).append('<i class="create-search-row-btn icon settings"><img src="_assets/img/icn-add.svg" alt="add"></i>'),jQuery(d).click(function(){createASRow()})):(jQuery(d).append('<i class="destroy-search-row-btn icon settings"><img src="_assets/img/icn-remove.svg" alt="remove"></i>'),jQuery(d).click(function(){jQuery(b).remove()})),jQuery(c).append(d),jQuery(b).append(c),jQuery("#as-search-container").append(b)},submitCustomQuery=function(a,b){jQuery("#userloc").hide();var c={parameters:{submitOnLoad:!0,submissionType:"customFilter",otherFunction:""},constraints:{"filter-constraint-1":{constraint1:"does",constraint2:"contain",constraint3:"trId",constraint4:a,constraint5:"AND"}}};JSON.stringify(c);submitQuery(c)},submitQuery=function(a){console.log("Submitting...",a),showLoader(),ajaxObj=jQuery.ajax(url_base+"/application/controller/map.php",{type:"post",data:a,success:function(a){if(console.log("Query submitted"),0!=a){var b=jQuery.parseJSON(a);0!=b.totTrs&&void 0!=b.result?(ixMapsDataJson=jQuery.parseJSON(b.result),jQuery("#tot-results").html(b.trsTable),jQuery("#traceroutes-results-table").html(b.trsTable),jQuery("#tot-results").html(b.totTrs),jQuery("#my-ip").html(myIp),console.log(" Total TRs: "+b.totTrs),console.log(" Total Hops: "+b.totHops),console.log(" Execution Time: "+b.execTime+" Sec."),jQuery("#filter-results-summary").html(b.querySummary),loadMapData(),hideLoader()):(hideLoader(),jQuery.toast({heading:"No routes found",text:"No routes were found with specified criteria, returning last submitted route instead. Adjust the query options to be more inclusive, then click Submit to re-query.",hideAfter:1e4,allowToastClose:!0,position:"mid-center",icon:"error"}))}},error:function(a){console.log("Error! Submission unsuccessful")}})},submitUserLocObject=function(){myCity=jQuery(".userloc-city").val(),myCountry=jQuery(".userloc-country").val(),""!=myCity&&""!=myCountry?(console.log("Searching based on Country and City"),userLocJSON={"filter-constraint-1":{constraint1:"does",constraint2:"originate",constraint3:"country",constraint4:myCountry,constraint5:"AND"},"filter-constraint-2":{constraint1:"does",constraint2:"originate",constraint3:"city",constraint4:myCity,constraint5:"AND"}},submitQuery(userLocJSON)):""!=myCountry?(console.log("Searching based on Country"),userLocJSON={"filter-constraint-1":{constraint1:"does",constraint2:"contain",constraint3:"country",constraint4:myCountry,constraint5:"AND"}},submitQuery(userLocJSON)):""!=myCity?(console.log("Searching based on city"),userLocJSON={"filter-constraint-1":{constraint1:"does",constraint2:"contain",constraint3:"city",constraint4:myCity,constraint5:"AND"}},submitQuery(userLocJSON)):(console.log("Giving up, last submission instead of user geoloc"),submitLastSubmissionObject())};